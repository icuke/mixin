//@include wrap(cuke);
body {
    
}


/**
 *  sass each
 */

%round-each {
    border-radius: 50%;
    overflow: hidden;
    &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        height: 20%;
        width: 20%;
        transform: translate3d(-50%, -50%, 0);
        background-color: #fff;
        z-index: 9;
        border-radius: 50%;
    }
    .sector {
        position: absolute;
        bottom: 50%;
        right: 50%;
        height: 50%;
        width: 50%;
        color: #333;
        border: 1px solid #f00;
        transform-origin: right bottom;
    }
    $rotate: 60deg;
    $skew: 30deg;
    $sector: (1 30deg 30deg) (2 90deg 30deg) (3 150deg 30deg) (4 210deg 30deg) (5 270deg 30deg) (6 330deg 30deg);
    ;
    @mixin translate($rotate, $skew) {
        transform: rotate($rotate) skew($skew);
        span {
            color: #fff;
            position: absolute;
            top: 50%;
            left: 50%;
            font-size: 16px;
            transform-origin: center;
            transform: skew(-$skew) rotate(-$rotate);
        }
    }
    ;
    @each $attr in $sector {
        $name: nth($attr, 1);
        $rotate: nth($attr, 2);
        $skew: nth($attr, 3);
        .sector:nth-of-type(#{$name}) {
            @include translate($rotate, $skew);
            background-color: #111*$name+#777;
            &:hover {
                color: #f00;
                opacity: .7;
            }
        }
    }
}


/**
 *  sass 电风扇形
 */

%round-for-electric-fan {
    border-radius: 50%;
    overflow: hidden;
    &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        height: 20%;
        width: 20%;
        transform: translate3d(-50%, -50%, 0);
        background-color: #fff;
        z-index: 9;
        border-radius: 50%;
    }
    .sector {
        position: absolute;
        bottom: 50%;
        right: 50%;
        height: 50%;
        width: 50%;
        color: #333;
        border: 1px solid #f00;
        transform-origin: right bottom;
        &:hover {
            color: #f00;
            opacity: .7;
        }
    }
    $rotate: 72deg;
    $skew: 36deg;
    @for $i from 1 through 5 {
        .sector:nth-of-type(#{$i}) {
            transform: rotate($rotate*$i - 30) skew($skew);
            background-color: #111*$i+#777;
            span {
                position: absolute;
                top: 50%;
                left: 50%;
                font-size: 16px;
                transform-origin: center;
                transform: skew(-$skew) rotate(-$rotate*$i+30);
            }
        }
    }
    ;
    @mixin translate($rotate, $skew) {
        transform: rotate($rotate) skew($skew);
    }
}


/**
 *  sass 扇形菜单自适应数量
 */

%round-for {
    border-radius: 50%;
    overflow: hidden;
    position: relative;
    &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        height: 20%;
        width: 20%;
        transform: translate3d(-50%, -50%, 0);
        background-color: #fff;
        z-index: 9;
        border-radius: 50%;
    }
    .sector {
        position: absolute;
        bottom: 50%;
        right: 50%;
        height: 50%*1.414;
        width: 50%*1.414;
        color: #333;
        border: 1px solid #f00;
        background-color: #ccc;
        transform-origin: right bottom;
        &:hover {
            color: #f00;
            opacity: .7;
        }
        span {
            position: absolute;
            right: 10%;
            bottom: 10%;
            font-size: 16px;
            transform-origin: center;
        }
    }
    /**
     * [description]    继承转盘大师衣钵扇形菜单 "转盘公式来自范大师"
     * @Author   cuke
     * @DateTime 2016-10-17
     * @param    {number}   数量
     */
    $n: 6;
    @for $i from 1 through $n {
        .sector:nth-of-type(#{$i}) {
            transform: rotate(90deg+($i - 2)*360/$n) skew(90deg-360/$n);
            span {
                transform: skew(-90deg+360/$n) rotate(-90deg -($i - 2)*360/$n);
            }
        }
    }
}

@mixin round-for($n: 6) {
    border-radius: 50%;
    overflow: hidden;
    position: relative;
    float: left;

    &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        height: 20%;
        width: 20%;
        transform: translate3d(-50%, -50%, 0);
        background-color: #fff;
        z-index: 9;
        border-radius: 50%;
    }
    .sector {
        position: absolute;
        bottom: 50%;
        right: 50%;
        height: 50%*1.414;
        width: 50%*1.414;
        color: #333;
        border: 1px solid #f00;
        background-color: #ccc;
        transform-origin: right bottom;
        &:hover {
            color: #f00;
            opacity: .7;
        }
        span {
            position: absolute;
            right: 10%;
            bottom: 10%;
            font-size: 16px;
            transform-origin: center;
        }
    }
    /**
     * [description]    继承转盘大师衣钵扇形菜单 "转盘公式来自范大师"
     * @Author   cuke
     * @DateTime 2016-10-17
     * @param    {number}   数量
     */
    
    @for $i from 1 through $n {
        .sector:nth-of-type(#{$i}) {
            transform: rotate(90deg+($i - 2)*360/$n) skew(90deg-360/$n);
            span {
                transform: skew(-90deg+360/$n) rotate(-90deg -($i - 2)*360/$n);
            }
        }
    }
}

%react{
    perspective: 600px;
    position:relative;
    height:300px;
    width:300px;
    margin:50px auto;
    border:1px solid #EEE;
    box-shadow:inset 0 0 5px rgba(#000, .3);

    &:hover{
        .cuke{
            transform: rotateX(-30deg) rotateY(765deg);
            &.mini{
                transform: rotateX(-30deg) rotateY(-765deg) scale3d(.4, .4, .4);
            }
        }
    }


    .cuke {    
        &.mini{
            transform: rotateX(-30deg) rotateY(45deg) scale3d(.4, .4, .4);
            div{
                background:rgba(#000, .4);
                border:1px solid rgba(#000, .5);
            }
        }

        width:100px;
        height:100px;
        position:absolute;
        top:100px;
        left:100px;
        
        transform-style: preserve-3d;
        transition:3s;
        transform-origin:50% 50% -50px;
        transform: rotateX(-30deg) rotateY(45deg);    
        
        $disX: 100px;
        $list:  (1 center center 0 0 rotateZ(0))
                (2 right center $disX*-1 0 rotateY(-90deg))
                (3 center bottom 0 $disX*-1 rotateX(90deg))
                (4 center top 0 $disX rotateX(-90deg))
                (5 left center $disX 0  rotateY(90deg))
                (6 center center 0 0 translateZ(100px));

        div {
            color:#fff;
            width:100px;
            height:100px;
            position:absolute;
            background:rgba(#000, .4);
            border:1px solid rgba(#000, .3);
            box-sizing:border-box;
            
        }

        @each $attr in $list {
            $name: nth($attr, 1);
            $origin-x: nth($attr, 2);
            $origin-y: nth($attr, 3);
            $left: nth($attr, 4);
            $top: nth($attr, 5);
            $transform-attr: nth($attr, 6);

            div:nth-child(#{$name}){
                left:$left;
                top:$top;
                transform-origin:$origin-x $origin-y;
                
                @if $name == 6 {
                    transform:rotateY(180deg) $transform-attr;   
                }@else {
                    transform:$transform-attr;
                }
            }
        }
    }
}

.wrap{
    @extend %react;
}

.cuker{
    width: 300px;
    height: 300px;
    transform:rotate(0);

    @include round-for(6);

    &.kk{
        @include round-for(8);
    }
}
